plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '1.0.0'
}

rootProject.name = 'neoform'

ext.versions = [] as Set

def addDirectory(path) {
    path.eachDir() {
        def relative = rootDir.toPath().relativize(it.toPath()).toFile()
        include relative.path
        project(':' + relative.path).name = it.name
        versions.add(it.name)
    }
}

ext.local = new Properties()
if (file('local.properties').exists()) {
    local.load(file('local.properties').newDataInputStream())
}

def hasLocalProperty(name) {
    return local.containsKey(name) || hasProperty(name)
}

def getLocalProperty(name) {
    return local.getProperty(name) ?: getProperty(name)
}

def type = hasLocalProperty('type') ? getLocalProperty('type').toLowerCase() : 'release'

if ('release'.equals(type)) {
    addDirectory(new File(rootDir, 'versions/release/'))
} else if ('snapshot'.equals(type)) {
    if (hasLocalProperty('ver')) {
        addDirectory(new File(rootDir, 'versions/snapshot/' + getLocalProperty('ver')))
    } else {
        new File(rootDir, 'versions/snapshot/').eachDir() {
            addDirectory(it)
        }
    }
} else if ('pre'.equals(type)) {
    if (hasLocalProperty('ver')) {
        addDirectory(new File(rootDir, 'versions/pre/' + getLocalProperty('ver')))
    } else {
        new File(rootDir, 'versions/pre/').eachDir() {
            addDirectory(it)
        }
    }
}

println('Versions: ' + versions)

